defaults:
  run:
    shell: "bash"

name: "Auto Create Release Tag"

on:
  pull_request:
    types: ["closed"]

env:
  POETRY_VERSION: "1.1.11"
  PYTHON_VERSION: "3.10.0"
  PYTHONUNBUFFERED: "1"

jobs:
  create_release_tag:
    if: "${{ startsWith(github.head_ref, 'chore/release-') && github.event.pull_request.merged == true }}"
    name: "Create release tag"

    runs-on: "ubuntu-latest"

    steps:
      - id: "token"
        uses: "tibdex/github-app-token@v1.4"
        with:
          app_id: "${{ secrets.BADABUMP_APP_ID }}"
          private_key: "${{ secrets.BADABUMP_APP_PRIVATE_KEY }}"

      - uses: "actions/checkout@v2.3.5"
        with:
          token: "${{ steps.token.outputs.token }}"
          ref: "master"

      - name: "Install Python"
        uses: "actions/setup-python@v2.2.2"
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: "Install poetry"
        run: "python3 -m pip install poetry==${{ env.POETRY_VERSION }}"

      - name: "Cache venv"
        uses: "actions/cache@v2.1.6"
        with:
          path: ".venv"
          key: "venv-${{ env.PYTHON_VERSION }}-${{ hashFiles('poetry.lock') }}"

      - name: "Install badabump"
        run: "poetry install --no-dev"

      - id: "badabump"
        name: "Run badabump"
        run: "poetry run python3 -m badabump.ci prepare_tag"

      - name: "Create release tag from latest commit"
        run: |
          set -euo pipefail

          git config user.name badabump-release-bot[bot]
          git config user.email badabump-release-bot[bot]@users.noreply.github.com

          cat > ./tag_message.txt <<EOF
          ${{ steps.badabump.outputs.tag_message }}
          EOF

          git tag -a ${{ steps.badabump.outputs.tag_name }} -F ./tag_message.txt
          git push --tag
